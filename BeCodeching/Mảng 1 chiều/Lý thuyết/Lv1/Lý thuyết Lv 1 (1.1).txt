Bài 1: Cho 1 dãy số nguyên. Viết chương trình xóa các phần tử là số đối xứng.


	VD:	1	15	121	33	4

		i


	=> Sau khi xóa:

		15

	


Số đối xứng là số gì:		x = 15	=> số đảo của x: 51	->	x != số đảo -> ko phải
			x = 121	== số đảo -> số đối xứng


			x = 1	=> số đảo: 1	=> số đối xứng.

	Cần:		
			+ đảo số x
			+ kiểm tra số đối xứng
			+ Xóa
			+ Liệt kê để xóa pt là số đối xứng


	Phân tích hàm đảo số:		x = 123			=>	321

			Tách:		3	2	1


		ghép số 3 với số 2	=> 32			
		Ghép số 32 với số 1	=> 321				(chữ số)
					Kỹ thuật ghép:	a	b
							a*10 + b

						VD:	3	2
							3*10 + 2 = 32

							32	11
							32*10 + 1 = 321




 Lưu ý khi sử dụng hàm: + Nếu tham số là biến -> ? có sự thay đổi không -> ? có muốn lưu ko -> &
+ Nếu là hàm lồng hàm, mà tham số hàm cha trùng tham số hàm con -> ? tham số ở hàm con có thay đổi không
							-> ? có muốn lưu ko -> &


Bài 2: Cho 1 dãy số nguyên. Viết chương trình thêm phần tử 0 vào trước các số hoàn thiện



	+ thêm
	+ số hoàn thiện
	+ Liệt kê số hoàn thiện để thêm pt 0 đứng trước

					tổng các số ước của x(trừ chính nó) == chính nó
	số hoàn thiện:	x = 6		s = 1 + 2 + 3 == x


					x = 8	s = 1 + 2 + 4 = 7	!= x	-> ko phải số ht


		Tổng các ước:	liệt kê ước + tính tổng


Bài 3. Cho mảng 1 chiều các số nguyên. Viết chương trình xóa các phần tử trùng nhau trong mảng, chỉ giữ lại duy nhất một phần tử phân biệt.
VD: 1 4 2 2 1 5 4
==> 1 4 2 5



		xóa
		kiểm tra trùng ????


	VD:	1	4	2	5	
		0	1	2	3	4	5	6

			i	
				j


Áp cuối	i: Coi có trùng không, nếu có thì xóa
Cuối	j: quét các pt còn lại của i, nếu trùng thì báo cho i xóa


Kỹ thuật quét.




Bài 4. Cho mảng 1 chiều các số nguyên. Viết chương trình đếm số lần xuất hiện của từng phần tử trong mảng.
VD: 
1 3 5 2 3 1
==>
Phần tử	Số lần xuất hiện
1 	2
2	1	
3	2	
5 	1


		VD:	1	3	5	2	3	7
			0	1	2	3	4	5

							i
									j
cuối	i	thống kê cho từng pt
cuối	j	đếm sự trùng lặp cho i

vt 0:
	a[i] = 1		dem = 2


vt 1:
	a[i] = 3		dem = 3


//=================== Kỹ thuật sắp xếp ====================

+ sắp xếp tuyến tính	=> Chỉ học cái này

+ sắp xếp chèn
+ sắp xếp nổi bột
+ sắp xếp trộn
+ quicksort
+ heapsort
...
		Tăng dần:

	VD:	-7	-4	0	1	6	15
		0	1	2	3	4	5
							i
								j

áp cuối	i: Chọn giá trị thích hợp cho vị trí hiện tại
cuối	j: Quét các pt còn lại của i để Tìm kiếm giá trị thích hợp để tráo đổi với i