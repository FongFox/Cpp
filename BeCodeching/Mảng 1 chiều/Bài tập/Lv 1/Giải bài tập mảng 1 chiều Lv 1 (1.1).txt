Bài 1: Cho 1 dãy số nguyên. Viết chương trình xóa các phần tử là số đối xứng.
(cách tệ nhât)
#include<iostream>
#define MAX 1000
using namespace std;
------------------------------------ cách dở nhất----------------------------------
-----------------------------------------------------------------------------------
//==================Nguyên mẫu (mục lục)======================================
//------------------Hàm nhập phần tử, giá trị---------------------------------
//Hàm nhập phần tử
void input_element_array(int& n);
//HÀm nhập giá trị
void input_number_array(int n, int a[]);

//------------------Hàm xử lý-------------------------------------------------
//Hàm check
bool check_and_out(int n, int a[]);
//hàm tách
int seperate_number(int n);
//Hàm xóa
void delete_array(int& n, int a[], int vt);
//Hàm chung
void delete_opposite_number(int& n, int a[]);


//------------------Hàm xuất kết quả------------------------------------------
//Hàm xuất
void output(int n, int a[]);

//==================Hàm main(Hàm chính)===================================================
int main()
{
	int a[MAX]; int n;
	do
	{
		input_element_array(n);
	} while (n <= 0 || n > MAX);
	input_number_array(n, a);
	if (check_and_out(n, a) == false)
	{
		cout << "Vuot qua gioi han!";
		cout << endl << "Ket thuc chuong trinh." << endl;
		system("pause");
		return 0;
	}
	output(n, a);

	delete_opposite_number(n, a);
	output(n, a);

	cout << endl << "Ket thuc chuong trinh." << endl;
	system("pause");
	return 0;
}

//=================Định nghĩa(nơi xả hàm và mọi thứ :v)=======================================================================================
//-----------------Hàm nhập-------------------------------------------------------------------------------------------------------------------
//Hàm Nhập phần tử
void input_element_array(int& n)
{
	cout << "Nhap phan tu can dung: "; cin >> n;
}
//Hàm Nhập giá trị
void input_number_array(int n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "Nhap phan tu thu a[" << i << "]= "; cin >> a[i];
	}
}

//---------------------Hàm xử lý theo yêu cầu------------------------------------------------------------------------------------------------
//Hàm check
bool check_and_out(int n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		if (a[i] >= 1000)
		{
			return false;
		}
	}
}
//hàm tách
int seperate_number(int n)
{
	int sum = 0;
	int x = n;
	if (n >= 10 && n <= 99)
	{
		sum += ((x % 10) * 10) + (x / 10);
		return sum;
	}
	else if (n >= 100 && n <= 999)
	{
		sum += ((x % 10) * 100) + (((x / 10) % 10) * 10) + (x / 100);
		return sum;
	}
}
//Hàm xóa
void delete_array(int& n, int a[], int vt)
{
	for (int i = vt; i < n - 1; i++)
	{
		a[i] = a[i + 1];
	}
	n -= 1;
}
//Hàm chung
void delete_opposite_number(int& n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		int check = seperate_number(a[i]);
		if (a[i] >= 0 && a[i] <= 9)
		{
			delete_array(n, a, i);
			i -= 1;
		}
		else if (check == a[i])
		{
			delete_array(n, a, i);
			i -= 1;
		}
	}
}
//--------------------Hàm xuất kết quả----------------------------------------------------------------------------------------------------
//Hàm xuất 
void output(int n, int a[])
{
	cout << endl << "=========================== Xuat ==================================" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "a[" << i << "]= " << a[i] << "\t\t";
	}
	cout << endl;
}
----------------------------- Cách 1(tác động data gốc) ---------------------------
-----------------------------------------------------------------------------------
#include<iostream>
#define MAX 1000
using namespace std;
//==================Nguyên mẫu (mục lục)======================================
//------------------Hàm nhập phần tử, giá trị---------------------------------
//Hàm nhập phần tử
void input_element_array(int& n);
//Hàm nhập giá trị
void input_number_array(int n, int a[]);

//------------------Hàm xử lý-------------------------------------------------
//Hàm chung
void check_and_delete_same_number_array(int& n, int a[]);

//------------------Hàm xuất kết quả------------------------------------------
//Hàm xuất
void output(int n, int a[]);

//==================Hàm main(Hàm chính)===================================================
int main()
{
	int a[MAX]; int n;
	int b[MAX] = {}; int nb = 1;
	do
	{
		input_element_array(n);
	} while (n <= 0 || n > MAX);
	input_number_array(n, a);
	output(n, a);

	check_and_delete_same_number_array(n, a);
	output(n, a);

	cout << endl << "Ket thuc chuong trinh." << endl;
	system("pause");
	return 0;
}

//=================Định nghĩa(nơi xả hàm và mọi thứ :v)=======================================================================================
//-----------------Hàm nhập-------------------------------------------------------------------------------------------------------------------
//Hàm Nhập phần tử
void input_element_array(int& n)
{
	cout << "Nhap phan tu can dung: "; cin >> n;
}
//Hàm Nhập giá trị
void input_number_array(int n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "Nhap phan tu thu a[" << i << "]= "; cin >> a[i];
	}
}

//---------------------Hàm xử lý theo yêu cầu------------------------------------------------------------------------------------------------
//Hàm xóa 
void delete_array(int& n, int a[], int vt)
{
	for (int i = vt; i < n - 1; i++)
	{
		a[i] = a[i + 1];
	}
	n -= 1;
}
//Hàm số đảo
int opposite_number(int n)
{
	int sodao = 0; int rem;
	while (n != 0)
	{
		rem = n % 10;
		sodao = (sodao * 10) + rem;
		n = n / 10;
	}
	return sodao;
}
//Hàm chung
void check_and_delete_same_number_array(int& n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		int check = opposite_number(a[i]);
		if (check == a[i])
		{
			delete_array(n, a, i);
			i -= 1;
		}
	}
}


//--------------------Hàm xuất kết quả----------------------------------------------------------------------------------------------------
//Hàm xuất 
void output(int n, int a[])
{
	cout << endl << "=========================== Xuat ==================================" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "a[" << i << "]= " << a[i] << "\t\t";
	}
	cout << endl;
}
-------------------------------- cách 2 (cheat array) -----------------------------
-----------------------------------------------------------------------------------
#include<iostream>
#define MAX 1000
using namespace std;
//==================Nguyên mẫu (mục lục)======================================
//------------------Hàm nhập phần tử, giá trị---------------------------------
//Hàm nhập phần tử
void input_element_array(int& n);
//Hàm nhập giá trị
void input_number_array(int n, int a[]);

//------------------Hàm xử lý-------------------------------------------------
//Hàm thêm 
void add_array(int& n, int a[], int vt, int x);
//Hàm số đảo
int opposite_number(int n);
//Hàm chung
void add_number_not_opposite(int n, int a[], int& nb, int b[]);

//------------------Hàm xuất kết quả------------------------------------------
//Hàm xuất
void output(int n, int a[]);

//==================Hàm main(Hàm chính)===================================================
int main()
{
	int a[MAX]; int n;
	int b[MAX] = {}; int nb = 0;
	do
	{
		input_element_array(n);
	} while (n <= 0 || n > MAX);
	input_number_array(n, a);
	output(n, a);

	add_number_not_opposite(n, a, nb, b);
	output(nb, b);

	cout << endl << "Ket thuc chuong trinh." << endl;
	system("pause");
	return 0;
}

//=================Định nghĩa(nơi xả hàm và mọi thứ :v)=======================================================================================
//-----------------Hàm nhập-------------------------------------------------------------------------------------------------------------------
//Hàm Nhập phần tử
void input_element_array(int& n)
{
	cout << "Nhap phan tu can dung: "; cin >> n;
}
//Hàm Nhập giá trị
void input_number_array(int n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "Nhap phan tu thu a[" << i << "]= "; cin >> a[i];
	}
}

//---------------------Hàm xử lý theo yêu cầu------------------------------------------------------------------------------------------------
//Hàm thêm 
void add_array(int& n, int a[], int vt, int x)
{
	for (int i = n; i < vt; i++)
	{
		a[i] = a[i - 1];
	}
	a[vt] = x;
	n += 1;
}
//Hàm số đảo
int opposite_number(int n)
{
	int sodao = 0; int rem;
	while (n != 0)
	{
		rem = n % 10;
		sodao = (sodao * 10) + rem;
		n = n / 10;
	}
	return sodao;
}
//Hàm chung
void add_number_not_opposite(int n, int a[], int& nb, int b[])
{
	for (int i = 0; i < n; i++)
	{
		int check_number = opposite_number(a[i]);
		bool check = true;
		for (int k = 0; k < i; k++)
		{
			if (a[k] == a[i])
			{
				check = false;
				break;
			}
		}
		if (check == false)
		{
			continue;
		}
		else
		{
			if (check_number == a[i])
			{
				continue;
			}
			else
			{
				b[nb] = a[i];
				nb += 1;
			}
		}
	}
}

//--------------------Hàm xuất kết quả----------------------------------------------------------------------------------------------------
//Hàm xuất 
void output(int n, int a[])
{
	cout << endl << "=========================== Xuat ==================================" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "a[" << i << "]= " << a[i] << "\t\t";
	}
	cout << endl;
}
===================================================================================Bài 2: Cho 1 dãy số nguyên. Viết chương trình thêm phần tử 0 vào trước các số hoàn thiện
#include<iostream>
#define MAX 1000
using namespace std;
//==================Nguyên mẫu (mục lục)======================================
//------------------Hàm nhập phần tử, giá trị---------------------------------
//Hàm nhập phần tử
void input_element_array(int& n);
//HÀm nhập giá trị
void input_number_array(int n, int a[]);

//------------------Hàm xử lý-------------------------------------------------
//Hàm thêm
void add_array(int& n, int a[], int vt, int x);
//Hàm số hoàn hảo
int perfect_number(int x);
//Hàm chung
void check_add_zero_before_perfect_number(int& n, int a[]);


//------------------Hàm xuất kết quả------------------------------------------
//Hàm xuất
void output(int n, int a[]);

//==================Hàm main(Hàm chính)===================================================
int main()
{
	int a[MAX]; int n;
	do
	{
		input_element_array(n);
	} while (n <= 0 || n > MAX);
	input_number_array(n, a);
	output(n, a);

	check_add_zero_before_perfect_number(n, a);
	output(n, a);

	cout << endl << "Ket thuc chuong trinh." << endl;
	system("pause");
	return 0;
}

//=================Định nghĩa(nơi xả hàm và mọi thứ :v)=======================================================================================
//-----------------Hàm nhập-------------------------------------------------------------------------------------------------------------------
//Hàm Nhập phần tử
void input_element_array(int& n)
{
	cout << "Nhap phan tu can dung: "; cin >> n;
}
//Hàm Nhập giá trị
void input_number_array(int n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "Nhap phan tu thu a[" << i << "]= "; cin >> a[i];
	}
}

//---------------------Hàm xử lý theo yêu cầu------------------------------------------------------------------------------------------------
//Hàm thêm
void add_array(int& n, int a[], int vt, int x)
{
	for (int i = n; i > vt; i--)
	{
		a[i] = a[i - 1];
	}
	a[vt] = x;
	n += 1;
}
//Hàm số hoàn hảo
int perfect_number(int x)
{
	int sum = 0;
	for (int i = 1; i <= x / 2; i++)
	{
		if (x % i == 0)
		{
			sum += i;
		}
	}
	return sum;
}
//Hàm chung
void check_add_zero_before_perfect_number(int& n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		int check = perfect_number(a[i]);
		if (check == a[i])
		{
			add_array(n, a, i, 0);
			i += 1;
		}
	}
}


//--------------------Hàm xuất kết quả----------------------------------------------------------------------------------------------------
//Hàm xuất 
void output(int n, int a[])
{
	cout << endl << "=========================== Xuat ==================================" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "a[" << i << "]= " << a[i] << "\t\t";
	}
	cout << endl;
}
===================================================================================
Bài 3. Cho mảng 1 chiều các số nguyên. Viết chương trình xóa các phần tử trùng nhau trong mảng, chỉ giữ lại duy nhất một phần tử phân biệt.	
VD: 1 4 2 2 1 5 4
==> 1 4 2 5
-------------------------------- Cách 1 -------------------------------------------
#include<iostream>
#define MAX 1000
using namespace std;
//==================Nguyên mẫu (mục lục)======================================
//------------------Hàm nhập phần tử, giá trị---------------------------------
//Hàm nhập phần tử
void input_element_array(int& n);
//Hàm nhập giá trị
void input_number_array(int n, int a[]);

//------------------Hàm xử lý-------------------------------------------------
//Hàm xóa
void delete_array(int& n, int a[], int vt);
//Hàm chung
void delete_same_number_array(int& n, int a[]);


//------------------Hàm xuất kết quả------------------------------------------
//Hàm xuất
void output(int n, int a[]);

//==================Hàm main(Hàm chính)===================================================
int main()
{
	int a[MAX]; int n;
	do
	{
		input_element_array(n);
	} while (n <= 0 || n > MAX);
	input_number_array(n, a);
	output(n, a);

	delete_same_number_array(n, a);
	output(n, a);

	cout << endl << "Ket thuc chuong trinh." << endl;
	system("pause");
	return 0;
}

//=================Định nghĩa(nơi xả hàm và mọi thứ :v)=======================================================================================
//-----------------Hàm nhập-------------------------------------------------------------------------------------------------------------------
//Hàm Nhập phần tử
void input_element_array(int& n)
{
	cout << "Nhap phan tu can dung: "; cin >> n;
}
//Hàm Nhập giá trị
void input_number_array(int n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "Nhap phan tu thu a[" << i << "]= "; cin >> a[i];
	}
}

//---------------------Hàm xử lý theo yêu cầu------------------------------------------------------------------------------------------------
//Hàm xóa
void delete_array(int& n, int a[], int vt)
{
	for (int i = vt; i < n - 1; i++)
	{
		a[i] = a[i + 1];
	}
	n -= 1;
}
//Hàm chung
void delete_same_number_array(int& n, int a[])
{
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			if (a[i] == a[j])
			{
				delete_array(n, a, j);
				i -= 1;
			}
		}
	}
}


//--------------------Hàm xuất kết quả----------------------------------------------------------------------------------------------------
//Hàm xuất 
void output(int n, int a[])
{
	cout << endl << "=========================== Xuat ==================================" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "a[" << i << "]= " << a[i] << "\t\t";
	}
	cout << endl;
}
----------------------------------- cách 2 ----------------------------------------
#include<iostream>
#define MAX 1000
using namespace std;
//==================Nguyên mẫu (mục lục)======================================
//------------------Hàm nhập phần tử, giá trị---------------------------------
//Hàm nhập phần tử
void input_element_array(int& n);
//Hàm nhập giá trị
void input_number_array(int n, int a[]);

//------------------Hàm xử lý-------------------------------------------------
//Hàm cheat
void cheat_array(int n, int a[], int& nb, int b[]);

//------------------Hàm xuất kết quả------------------------------------------
//Hàm xuất
void output(int n, int a[]);

//==================Hàm main(Hàm chính)===================================================
int main()
{
	int a[MAX]; int n;
	int b[MAX] = {}; int nb = 1;
	do
	{
		input_element_array(n);
	} while (n <= 0 || n > MAX);
	input_number_array(n, a);
	output(n, a);

	cheat_array(n, a, nb, b);
	output(nb, b);

	cout << endl << "Ket thuc chuong trinh." << endl;
	system("pause");
	return 0;
}

//=================Định nghĩa(nơi xả hàm và mọi thứ :v)=======================================================================================
//-----------------Hàm nhập-------------------------------------------------------------------------------------------------------------------
//Hàm Nhập phần tử
void input_element_array(int& n)
{
	cout << "Nhap phan tu can dung: "; cin >> n;
}
//Hàm Nhập giá trị
void input_number_array(int n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "Nhap phan tu thu a[" << i << "]= "; cin >> a[i];
	}
}

//---------------------Hàm xử lý theo yêu cầu------------------------------------------------------------------------------------------------

//Hàm cheat 
void cheat_array(int n, int a[], int& nb, int b[])
{
	for (int i = 0; i < n; i++)
	{
		bool check = true;
		for (int j = 0; j < i; j++)
		{
			if (a[i] == a[j])
			{
				check = false;
			}
		}
		if (check == true)
		{
			b[nb - 1] = a[i];
			nb += 1;
		}
		else continue;
	}
}

//--------------------Hàm xuất kết quả----------------------------------------------------------------------------------------------------
//Hàm xuất 
void output(int n, int a[])
{
	cout << endl << "=========================== Xuat ==================================" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "a[" << i << "]= " << a[i] << "\t\t";
	}
	cout << endl;
}
===================================================================================
===================================================================================
Bài 4. Cho mảng 1 chiều các số nguyên. Viết chương trình đếm số lần xuất hiện của từng phần tử trong mảng.									x
VD:
1 3 5 2 3 1
==>
Phần tử	Số lần xuất hiện
1 	2
2	1
3	2
5 	1
#include<iostream>
#define MAX 1000
using namespace std;
//==================Nguyên mẫu (mục lục)======================================
//------------------Hàm nhập phần tử, giá trị---------------------------------
//Hàm nhập phần tử
void input_element_array(int& n);
//Hàm nhập giá trị
void input_number_array(int n, int a[]);

//------------------Hàm xử lý-------------------------------------------------
//Hàm đếm số lần số nguyên trong mảng
void check_same_number_array(int n, int a[]);

//------------------Hàm xuất kết quả------------------------------------------
//Hàm xuất
void output(int n, int a[]);

//==================Hàm main(Hàm chính)===================================================
int main()
{
	int a[MAX]; int n;
	int b[MAX] = {}; int nb = 1;
	do
	{
		input_element_array(n);
	} while (n <= 0 || n > MAX);
	input_number_array(n, a);
	output(n, a);

	check_same_number_array(n, a);

	cout << endl << "Ket thuc chuong trinh." << endl;
	system("pause");
	return 0;
}

//=================Định nghĩa(nơi xả hàm và mọi thứ :v)=======================================================================================
//-----------------Hàm nhập-------------------------------------------------------------------------------------------------------------------
//Hàm Nhập phần tử
void input_element_array(int& n)
{
	cout << "Nhap phan tu can dung: "; cin >> n;
}
//Hàm Nhập giá trị
void input_number_array(int n, int a[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "Nhap phan tu thu a[" << i << "]= "; cin >> a[i];
	}
}

//---------------------Hàm xử lý theo yêu cầu------------------------------------------------------------------------------------------------
//Hàm đếm số lần số nguyên trong mảng
void check_same_number_array(int n, int a[])
{
	cout << "So lan gia tri trong phan tu xuat hien" << endl;
	for (int i = 0; i < n; i++)
	{
		int count = 1;
		bool check = true;
		for (int k = 0; k < i; k++)
		{
			if (a[i] == a[k])
			{
				check = false;
				break;
			}
		}
		if (check == false)
		{
			continue;
		}
		else 
		{
			for (int j = i + 1; j < n; j++)
			{
				if (a[i] == a[j])
				{
					count += 1;
				}
			}
		}
		cout << a[i] << "          " << count << endl;
	}
}


//--------------------Hàm xuất kết quả----------------------------------------------------------------------------------------------------
//Hàm xuất 
void output(int n, int a[])
{
	cout << endl << "=========================== Xuat ==================================" << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "a[" << i << "]= " << a[i] << "\t\t";
	}
	cout << endl;
}
======================================================================================================================================================================


